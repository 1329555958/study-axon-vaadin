<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.acme.oms</groupId>
        <artifactId>oms-parent</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>oms-ui</artifactId>
    <packaging>war</packaging>

    <name>Order Management System - Vaadin Web Application</name>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <!-- As "inplace" GWT compilation is made, ensure the widgetset -->
            <!-- directory is cleaned properly -->
            <!-- Vaadin 7.X
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <! - - <runTarget>mobilemail</runTarget> - - >
                    <! - - We are doing "inplace" but into subdir VAADIN/widgetsets. This 
                        way compatible with Vaadin eclipse plugin. - - >
                    <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
                    <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
                    <! - - Most Vaadin apps don't need this stuff, guide that to target - - >
                    <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
                    <deploy>${project.build.directory}/gwt-deploy</deploy>
                    <! - - Compile report is not typically needed either, saves hundreds of mb on disk - - >
                    <compileReport>false</compileReport>
                    <noServer>true</noServer>
                    <! - - Remove draftCompile when project is ready - - >
                    <draftCompile>false</draftCompile>

                    <style>OBF</style>
                    <strict>true</strict>
                    <runTarget>http://localhost:${web.port}/</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <configuration></configuration>
                        <goals>
                            <goal>clean</goal>
                            <goal>resources</goal>
                            <goal>update-theme</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile-theme</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                 
<! - -              
                <dependencies>
                    <dependency>< ! - - required when deamond is true for jetty - - >
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-util</artifactId>
                        <version>${jetty9.version}</version>
                    </dependency>
                </dependencies>
                - - >
             </plugin>
-->

            <!-- A simple Jetty test server at 
                    http://localhost:7080/vaadin can be launched with the Maven goal jetty:run 
                 and stopped with jetty:stop 
                 Note: Jetty 9 requieres Java 1.7 and above.
                    -->
            <plugin>
                <groupId>${jetty.maven.group}</groupId>
                <artifactId>${jetty.maven.artifact}</artifactId>
                <version>${jetty.maven.version}</version>
                <configuration>
                    <!-- 
                    <daemon>true</daemon>
                      -->
                
                    <!-- for jetty 8
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector" >
                            <port>${web.port}</port>
                        </connector>
                    </connectors>
                     -->
                    <httpConnector>
                        <port>${web.port}</port>
                    </httpConnector>
                    <stopPort>9966</stopPort>
                    <stopKey>vaadin</stopKey>
                    <!-- Redeploy every x seconds if changes are detected, 0 for no automatic redeployment -->
                    <scanIntervalSeconds>0</scanIntervalSeconds>
                    <!-- make sure Jetty also finds the widgetset -->
                    <webAppConfig>
                        <contextPath>/vaadin</contextPath>
<!--                         
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <!  - - Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 - -  >
                            <!  - - <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> - -  >
                            <!  - -  <resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>  - -  >
                            <resourcesAsCSV>${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
                        </baseResource>
 -->                            
                    </webAppConfig>
                </configuration>
                <dependencies>
 <!--  Vaadin 7.x but optional
                    <dependency>< ! - - required when deamond is true for jetty - - >
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-util</artifactId>
                        <version>${jetty.maven.version}</version>
                    </dependency>
 -->                
                    <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-dbcp2</artifactId>
                        <version>2.0.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hsqldb</groupId>
                        <artifactId>hsqldb</artifactId>
                        <version>${hsqldb.version}</version>
                    </dependency>
              </dependencies>                
            </plugin>
        </plugins>
<!-- Vaadin 7.x
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <configuration>
                        <wtpversion>2.0</wtpversion>
                        <additionalProjectnatures>
                            <projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
                        </additionalProjectnatures>
                        <additionalBuildcommands>
                            <buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
                            <buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
                        </additionalBuildcommands>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
 -->
    </build>

 
    <dependencies>

        <!-- Internal dependencies -->
        <dependency>
            <groupId>com.acme.oms</groupId>
            <artifactId>oms-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- External dependencies -->
        <!-- Vadin 6.x  -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
        </dependency>
        
         
         <!-- Vadin 7.x
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
         -->
        <!-- Vadim 7.x but optional
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).
          
          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
        </dependency>
        -->
         
        
    </dependencies>

</project>
